
info:
  description: API of the server for Fief Diplomatie
  title: Fief Diplomatie API
  version: 1.0.0
basePath: /api/v1
consumes: ["application/json"]
produces: ["application/json"]
schemes: ["http"]
swagger: "2.0"
securityDefinitions:
  Bearer:
    type: apiKey
    in: header
    name: Authorization
paths:
  /auth/signup:
    post:
      description: Register a new user
      tags: [user]
      operationId: Register
      parameters:
        - name: signup
          in: body
          description: Registration payload
          required: true
          schema:
            $ref: '#/definitions/RegisterUser'
      responses:
        200:
          description: Successful registration
        400:
          description: Registration failure 
          schema:
            description: Error message
            type: string            
        500:
          description: Server error
          schema:
            description: Error message
            type: string
  /auth/signin:
    post:
      tags: [user]
      operationId: Login
      consumes:
        - "application/json"
      description: Signin with login/password and retrieve JWT token for further requests
      parameters:
        - name: Login
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoginInfo'
      responses:
        200:
          description: Successful login
          schema:
            $ref: '#/definitions/LoginSuccess'
        401:
          schema:
            description: Error message  
            type: string
          description: Wrong Login/Password
        500:
          schema:
            description: Error message
            type: string
          description: Server error
  /games:
    get:
      tags: [game]
      security:
        - Bearer: []
      description: List existing games
      responses:
        200:
          description: TODO
          schema:
            $ref: '#/definitions/GamesSuccess'
        401:
          schema:
            description: Error Message
            type: string
          description: User not authorized to view games
  /games/new:
    post:
      tags: [manage]
      security:
        - Bearer: []
      description: Create a new game
      responses:
        '200':
          description: TODO
  /games/{id}/join:
    post:
      tags: [manage]
      security:
        - Bearer: []
      description: Join an existing game
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        '200':
          description: TODO
  /games/{id}:
    get:
      tags: [game]
      security:
        - Bearer: []
      description: Get current state of an existing game
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        '200':
          description: TODO
  /games/{id}/instructions:
    post:
      tags: [game]
      security:
        - Bearer: []
      description: Post an instruction for the authenticated user on the session, if no instruction defined
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: instruction
        in: body
        schema: 
          type: string
      responses:
        '200':
          description: TODO
    get:
      tags: [game]
      security:
        - Bearer: []
      description: Retrieve the current instructions for the authenticated user
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        '200':
          description: TODO


definitions:
  RegisterUser:
    type: object
    required:
      - email
      - login
      - password
    properties:
      email:
        type: string
      login:
        type: string
      password:
        type: string
  LoginInfo:
    type: object
    required:
      - login
      - password
    properties:
      login:
        type: string
      password:
        type: string
  LoginSuccess:
    type: object
    properties:
      token:
        type: string
  GamesSuccess:
    type: object
    properties: 
      available:
        description: Game created but waiting for enough players
        type: array
        items:
          $ref: '#/definitions/GameInfo'
      joined:
        description: Games joined by the current player
        type: array
        items:
          $ref: '#/definitions/GameInfo'
  GameInfo:
    description: General information about existing games
    type: object
    required:
      - id
      - name
      - players
      - status
    properties:       
      id: 
        description: UID of the game
        type: string
      name: 
        description: Human readable name of the game
        type: string
      joined:
        description: If the current user as joined this game
        type: boolean
      status:
        description: A simple string describing the status (defined on server side)
        type: string
      players:
        type: object
        required:
          - joined
          - required
        properties:
          required:
            description: Total players required to launch the game
            type: number
          joined:
            description: Current count of players who have joined the game
            type: number
    


